// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("rescript/lib/js/list.js");
var Vdom = require("../src-ocaml/vdom.js");
var Tea_app = require("../src-ocaml/tea_app.js");
var Tea_html = require("../src-ocaml/tea_html.js");
var Caml_option = require("rescript/lib/js/caml_option.js");

function select(param_0) {
  return /* Select */{
          _0: param_0
        };
}

function render_selected(selected) {
  if (selected !== undefined) {
    return Tea_html.div(undefined, undefined, /* [] */0, {
                hd: {
                  TAG: /* Text */1,
                  _0: "you selected " + selected
                },
                tl: {
                  hd: Tea_html.div(undefined, undefined, {
                        hd: Vdom.onMsg("click", /* Delete */0),
                        tl: /* [] */0
                      }, {
                        hd: {
                          TAG: /* Text */1,
                          _0: "delete selection"
                        },
                        tl: /* [] */0
                      }),
                  tl: /* [] */0
                }
              });
  } else {
    return Tea_html.div(undefined, undefined, /* [] */0, {
                hd: {
                  TAG: /* Text */1,
                  _0: "Nothing selected"
                },
                tl: /* [] */0
              });
  }
}

function lang(l, is_selected) {
  return Tea_html.li(undefined, undefined, {
              hd: Vdom.onMsg("click", /* Select */{
                    _0: l
                  }),
              tl: {
                hd: Vdom.style("color", "blue"),
                tl: {
                  hd: is_selected ? Vdom.style("border", "1px solid black") : Tea_html.noProp,
                  tl: {
                    hd: is_selected ? ({
                          TAG: /* Attribute */1,
                          _0: "",
                          _1: "lang",
                          _2: l
                        }) : Tea_html.noProp,
                    tl: /* [] */0
                  }
                }
              }
            }, {
              hd: {
                TAG: /* Text */1,
                _0: l
              },
              tl: /* [] */0
            });
}

function render_languages(selected, languages) {
  var is_selected = function (selected, language) {
    if (selected !== undefined) {
      return language === Caml_option.valFromOption(selected);
    } else {
      return false;
    }
  };
  var rendered = List.map((function (l) {
          return lang(l, is_selected(selected, l));
        }), languages);
  return Tea_html.ul(undefined, undefined, /* [] */0, rendered);
}

function update(state, lang) {
  if (lang) {
    return {
            selected: lang._0,
            languages: state.languages
          };
  } else {
    return {
            selected: undefined,
            languages: state.languages
          };
  }
}

function view(state) {
  return Tea_html.div(undefined, undefined, /* [] */0, {
              hd: render_selected(state.selected),
              tl: {
                hd: render_languages(state.selected, state.languages),
                tl: /* [] */0
              }
            });
}

var partial_arg_model = {
  selected: "Erlang",
  languages: {
    hd: "Erlang",
    tl: {
      hd: "Ocaml",
      tl: {
        hd: "Clojure",
        tl: /* [] */0
      }
    }
  }
};

var partial_arg = {
  model: partial_arg_model,
  update: update,
  view: view
};

function main(param, param$1) {
  return Tea_app.beginnerProgram(partial_arg, param, param$1);
}

var $$delete = /* Delete */0;

exports.select = select;
exports.$$delete = $$delete;
exports.render_selected = render_selected;
exports.lang = lang;
exports.render_languages = render_languages;
exports.update = update;
exports.view = view;
exports.main = main;
/* Tea_html Not a pure module */
