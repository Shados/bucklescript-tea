// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Vdom = require("../src-ocaml/vdom.js");
var Tea_app = require("../src-ocaml/tea_app.js");
var Tea_html = require("../src-ocaml/tea_html.js");
var Tea_json = require("../src-ocaml/tea_json.js");
var Tea_mouse = require("../src-ocaml/tea_mouse.js");
var Tea_result = require("../src-ocaml/tea_result.js");

function dragStart(param_0) {
  return {
          TAG: /* DragStart */0,
          _0: param_0
        };
}

function dragAt(param_0) {
  return {
          TAG: /* DragAt */1,
          _0: param_0
        };
}

function dragEnd(param_0) {
  return {
          TAG: /* DragEnd */2,
          _0: param_0
        };
}

function init(param) {
  return [
          {
            position: {
              x: 200,
              y: 200
            },
            drag: undefined
          },
          /* NoCmd */0
        ];
}

function getPosition(param) {
  var drag = param.drag;
  var position = param.position;
  if (drag === undefined) {
    return position;
  }
  var current = drag.current;
  var start = drag.start;
  return {
          x: (position.x + current.x | 0) - start.x | 0,
          y: (position.y + current.y | 0) - start.y | 0
        };
}

function updateHelp(model, xy) {
  var position = model.position;
  switch (xy.TAG | 0) {
    case /* DragStart */0 :
        var xy$1 = xy._0;
        return {
                position: position,
                drag: {
                  start: xy$1,
                  current: xy$1
                }
              };
    case /* DragAt */1 :
        var drag = model.drag;
        return {
                position: position,
                drag: drag !== undefined ? ({
                      start: drag.start,
                      current: xy._0
                    }) : undefined
              };
    case /* DragEnd */2 :
        return {
                position: getPosition(model),
                drag: undefined
              };
    
  }
}

function update(model, msg) {
  return [
          updateHelp(model, msg),
          /* NoCmd */0
        ];
}

function subscriptions(model) {
  var match = model.drag;
  if (match !== undefined) {
    return {
            TAG: /* Batch */0,
            _0: {
              hd: Tea_mouse.moves(undefined, dragAt),
              tl: {
                hd: Tea_mouse.ups(undefined, dragEnd),
                tl: /* [] */0
              }
            }
          };
  } else {
    return /* NoSub */0;
  }
}

function px(number) {
  return String(number) + "px";
}

var onMouseDown = Vdom.onCB("mousedown", "", (function (ev) {
        return Tea_result.result_to_option(Tea_json.Decoder.decodeEvent(Tea_json.Decoder.map(dragStart, Tea_mouse.position), ev));
      }));

function view(model) {
  var realPosition = getPosition(model);
  return Tea_html.div(undefined, undefined, {
              hd: onMouseDown,
              tl: {
                hd: {
                  TAG: /* Style */4,
                  _0: {
                    hd: [
                      "background-color",
                      "#3C8D2F"
                    ],
                    tl: {
                      hd: [
                        "cursor",
                        "move"
                      ],
                      tl: {
                        hd: [
                          "width",
                          "100px"
                        ],
                        tl: {
                          hd: [
                            "height",
                            "100px"
                          ],
                          tl: {
                            hd: [
                              "border-radius",
                              "4px"
                            ],
                            tl: {
                              hd: [
                                "position",
                                "absolute"
                              ],
                              tl: {
                                hd: [
                                  "left",
                                  String(realPosition.x) + "px"
                                ],
                                tl: {
                                  hd: [
                                    "top",
                                    String(realPosition.y) + "px"
                                  ],
                                  tl: {
                                    hd: [
                                      "color",
                                      "white"
                                    ],
                                    tl: {
                                      hd: [
                                        "display",
                                        "flex"
                                      ],
                                      tl: {
                                        hd: [
                                          "align-items",
                                          "center"
                                        ],
                                        tl: {
                                          hd: [
                                            "justify-content",
                                            "center"
                                          ],
                                          tl: /* [] */0
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                tl: /* [] */0
              }
            }, {
              hd: {
                TAG: /* Text */1,
                _0: "Drag Me!"
              },
              tl: /* [] */0
            });
}

var partial_arg = {
  init: init,
  update: update,
  view: view,
  subscriptions: subscriptions
};

function main(param, param$1) {
  return Tea_app.standardProgram(partial_arg, param, param$1);
}

exports.dragStart = dragStart;
exports.dragAt = dragAt;
exports.dragEnd = dragEnd;
exports.init = init;
exports.getPosition = getPosition;
exports.updateHelp = updateHelp;
exports.update = update;
exports.subscriptions = subscriptions;
exports.px = px;
exports.onMouseDown = onMouseDown;
exports.view = view;
exports.main = main;
/* onMouseDown Not a pure module */
