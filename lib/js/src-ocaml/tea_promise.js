// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Caml_option = require("rescript/lib/js/caml_option.js");

function cmd(promise, tagger) {
  return {
          TAG: /* EnqueueCall */2,
          _0: (function (callbacks) {
              promise.then(function (res) {
                    var msg = Curry._1(tagger, res);
                    if (msg !== undefined) {
                      Curry._1(callbacks.contents.enqueue, Caml_option.valFromOption(msg));
                      return Promise.resolve(undefined);
                    } else {
                      return Promise.resolve(undefined);
                    }
                  });
              
            })
        };
}

function result(promise, msg) {
  return {
          TAG: /* EnqueueCall */2,
          _0: (function (callbacks) {
              var enq = function (result) {
                return Curry._1(callbacks.contents.enqueue, Curry._1(msg, result));
              };
              promise.then(function (res) {
                      return Promise.resolve(enq({
                                      TAG: /* Ok */0,
                                      _0: res
                                    }));
                    }).catch(function (err) {
                    return Promise.resolve(enq({
                                    TAG: /* Error */1,
                                    _0: "" + err
                                  }));
                  });
              
            })
        };
}

exports.cmd = cmd;
exports.result = result;
/* No side effect */
